<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.swinedatebaseproject.mapper.MicrobialMapper">

    <resultMap id="countLevelResultMap" type="com.example.swinedatebaseproject.domain.vo.CountLevelVO">
        <result property="count" column="count" />
        <result property="level" column="level" />
    </resultMap>

    <select id="countLevelByName" resultType="com.example.swinedatebaseproject.domain.vo.CountLevelVO">
        SELECT COUNT(DISTINCT microbial_name) AS count, level
        FROM microbial
        GROUP BY level
    </select>


    <resultMap id="microbialResultMap" type="com.example.swinedatebaseproject.domain.Microbial">
        <id property="id" column="id"/>
        <result property="microbialName" column="microbial_name"/>
        <result property="specificTaxonomy" column="specific_taxonomy"/>
        <result property="level" column="level"/>
        <result property="count" column="count"/>
        <result property="abundance" column="abundance"/>
        <result property="runs" column="Runs"/>
        <result property="bioProject" column="BioProject"/>
    </resultMap>

    <select id="getMicrobialByBioProject" resultMap="microbialResultMap">
        SELECT * FROM swine.microbial WHERE BioProject LIKE CONCAT('%', #{name}, '%')
    </select>

    <select id="getMicrobial" resultMap="microbialResultMap">
        SELECT
            *
        FROM
            swine.microbial
        WHERE
                CONCAT_WS(' ', microbial_name, specific_taxonomy, level, count, abundance, Runs, BioProject)
                LIKE CONCAT('%', #{name}, '%')
    </select>

    <resultMap id="RunsAndCountResultMap" type="com.example.swinedatebaseproject.domain.vo.RunsAndCount">
        <result property="runs" column="Runs" />
        <result property="count" column="total_count" />
    </resultMap>

    <select id="selectRunsByGroupsAndLevels" resultMap="RunsAndCountResultMap">
        SELECT DISTINCT sr.Runs, m.count AS total_count
        FROM swine.sample_runs sr
                 JOIN swine.microbial m ON sr.Runs = m.Runs
        WHERE sr.Group IS NOT NULL
          AND sr.Group = #{group}
          and sr.Bio_project = #{name}
          AND m.level IN ('Phylum', 'Genus');
    </select>

    <resultMap id="GroupVOMap" type="com.example.swinedatebaseproject.domain.vo.GroupVO">
        <result property="name" column="microbial_name" />
        <result property="specific_taxonomy" column="specific_taxonomy" />
        <result property="count" column="total_count" />
        <result property="level" column="level" />

    </resultMap>

    <select id="getSpecificTaxonomyByRuns" parameterType="string" resultMap="GroupVOMap">
        SELECT
            sub.microbial_name,
            sub.specific_taxonomy,
            sub.level,
            SUM(sub.count) AS total_count
        FROM (
                 SELECT
                     m.microbial_name,
                     m.specific_taxonomy,
                     m.level,
                     m.count
                 FROM
                     swine.microbial m
                         JOIN
                     swine.sample_runs sr ON sr.Runs = m.Runs
                 WHERE
                     sr.Group IS NOT NULL
                   AND sr.Group = #{group}
                   AND sr.Bio_project = #{project}
                   AND m.level IN ('Phylum', 'Genus')
                   AND sr.Runs = #{runs}
             ) AS sub
        GROUP BY
            sub.microbial_name,
            sub.specific_taxonomy,
            sub.level
        ORDER BY
            total_count DESC;
    </select>



    <!-- 根据特定的分类群查询微生物名称 -->
    <select id="getMicrobialNameBySpecificTaxonomy" resultType="java.lang.String">
        SELECT DISTINCT microbial_name
        FROM microbial
        WHERE specific_taxonomy = #{taxonomy}
    </select>

</mapper>